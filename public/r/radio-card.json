{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radio-card",
  "type": "registry:component",
  "title": "Radio Card",
  "description": "A radio card component.",
  "files": [
    {
      "path": "src/components/RadioCard.tsx",
      "content": "// Tremor Raw Radio Card [v0.0.1]\n\nimport * as RadioGroupPrimitives from \"@radix-ui/react-radio-group\"\nimport React from \"react\"\n\nimport { cx, focusInput, focusRing } from \"@/lib/utils\"\n\nconst RadioCardGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitives.Root>\n>(({ className, ...props }, forwardedRef) => {\n  return (\n    <RadioGroupPrimitives.Root\n      ref={forwardedRef}\n      className={cx(\"grid gap-2\", className)}\n      {...props}\n    />\n  )\n})\n\nRadioCardGroup.displayName = \"RadioCardGroup\"\n\nconst RadioCardItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitives.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitives.Item>\n>(({ className, children, ...props }, forwardedRef) => {\n  return (\n    <RadioGroupPrimitives.Item\n      ref={forwardedRef}\n      className={cx(\n        // base\n        \"group relative w-full rounded-md border p-4 text-left shadow-sm transition focus:outline-none\",\n        // background color\n        \"bg-white dark:bg-gray-950\",\n        // border color\n        \"border-gray-300 dark:border-gray-800\",\n        \"data-[state=checked]:border-indigo-600\",\n        \"data-[state=checked]:dark:border-indigo-600\",\n        // disabled\n        \"data-[disabled]:border-gray-100 data-[disabled]:dark:border-gray-800\",\n        \"data-[disabled]:bg-gray-50 data-[disabled]:shadow-none data-[disabled]:dark:bg-gray-900\",\n        focusInput,\n        className,\n      )}\n      {...props}\n    >\n      {children}\n    </RadioGroupPrimitives.Item>\n  )\n})\n\nRadioCardItem.displayName = \"RadioCardItem\"\n\nconst RadioCardIndicator = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitives.Indicator>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitives.Indicator>\n>(({ className, ...props }, forwardedRef) => {\n  return (\n    <div\n      className={cx(\n        // base\n        \"relative flex size-4 shrink-0 appearance-none items-center justify-center rounded-full border shadow-sm outline-none\",\n        // border color\n        \"border-gray-200 dark:border-gray-800\",\n        // background color\n        \"bg-white dark:bg-gray-950\",\n        // checked\n        \"group-data-[state=checked]:border-0 group-data-[state=checked]:border-transparent group-data-[state=checked]:bg-indigo-600\",\n        // disabled\n        \"group-data-[disabled]:border-gray-300 group-data-[disabled]:bg-gray-100 group-data-[disabled]:text-gray-400\",\n        \"group-data-[disabled]:dark:border-gray-700 group-data-[disabled]:dark:bg-gray-800\",\n        // focus\n        focusRing,\n        className,\n      )}\n    >\n      <RadioGroupPrimitives.Indicator\n        ref={forwardedRef}\n        className={cx(\"flex items-center justify-center\")}\n        {...props}\n      >\n        <div\n          className={cx(\n            // base\n            \"size size-1.5 shrink-0 rounded-full\",\n            // indicator\n            \"bg-white\",\n            // disabled\n            \"group-data-[disabled]:bg-gray-400 group-data-[disabled]:dark:bg-gray-500\",\n          )}\n        />\n      </RadioGroupPrimitives.Indicator>\n    </div>\n  )\n})\n\nRadioCardIndicator.displayName = \"RadioCardIndicator\"\n\nexport { RadioCardGroup, RadioCardIndicator, RadioCardItem }\n",
      "type": "registry:component"
    }
  ]
}