{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard-overview-page",
  "type": "registry:page",
  "title": "Dashboard Overview Page",
  "description": "The main overview page of the dashboard.",
  "files": [
    {
      "path": "src/app/(main)/overview/page.tsx",
      "content": "\"use client\"\nimport { CategoryBarCard } from \"@/components/ui/overview/DashboardCategoryBarCard\"\nimport { ChartCard } from \"@/components/ui/overview/DashboardChartCard\"\nimport { Filterbar } from \"@/components/ui/overview/DashboardFilterbar\"\nimport { ProgressBarCard } from \"@/components/ui/overview/DashboardProgressBarCard\"\nimport { overviews } from \"@/data/overview-data\"\nimport { OverviewData } from \"@/data/schema\"\nimport { cx } from \"@/lib/utils\"\nimport { subDays, toDate } from \"date-fns\"\nimport React from \"react\"\nimport { DateRange } from \"react-day-picker\"\n\nexport type PeriodValue = \"previous-period\" | \"last-year\" | \"no-comparison\"\n\nconst categories: {\n  title: keyof OverviewData\n  type: \"currency\" | \"unit\"\n}[] = [\n  {\n    title: \"Rows read\",\n    type: \"unit\",\n  },\n  {\n    title: \"Rows written\",\n    type: \"unit\",\n  },\n  {\n    title: \"Queries\",\n    type: \"unit\",\n  },\n  {\n    title: \"Payments completed\",\n    type: \"currency\",\n  },\n  {\n    title: \"Sign ups\",\n    type: \"unit\",\n  },\n  {\n    title: \"Logins\",\n    type: \"unit\",\n  },\n]\n\nexport type KpiEntry = {\n  title: string\n  percentage: number\n  current: number\n  allowed: number\n  unit?: string\n}\n\nconst data: KpiEntry[] = [\n  {\n    title: \"Rows read\",\n    percentage: 48.1,\n    current: 48.1,\n    allowed: 100,\n    unit: \"M\",\n  },\n  {\n    title: \"Rows written\",\n    percentage: 78.3,\n    current: 78.3,\n    allowed: 100,\n    unit: \"M\",\n  },\n  {\n    title: \"Storage\",\n    percentage: 26,\n    current: 5.2,\n    allowed: 20,\n    unit: \"GB\",\n  },\n]\n\nconst data2: KpiEntry[] = [\n  {\n    title: \"Weekly active users\",\n    percentage: 21.7,\n    current: 21.7,\n    allowed: 100,\n    unit: \"%\",\n  },\n  {\n    title: \"Total users\",\n    percentage: 70,\n    current: 28,\n    allowed: 40,\n  },\n  {\n    title: \"Uptime\",\n    percentage: 98.3,\n    current: 98.3,\n    allowed: 100,\n    unit: \"%\",\n  },\n]\n\nexport type KpiEntryExtended = Omit<\n  KpiEntry,\n  \"current\" | \"allowed\" | \"unit\"\n> & {\n  value: string\n  color: string\n}\n\nconst data3: KpiEntryExtended[] = [\n  {\n    title: \"Base tier\",\n    percentage: 68.1,\n    value: \"$200\",\n    color: \"bg-indigo-600 dark:bg-indigo-500\",\n  },\n  {\n    title: \"On-demand charges\",\n    percentage: 20.8,\n    value: \"$61.1\",\n    color: \"bg-purple-600 dark:bg-purple-500\",\n  },\n  {\n    title: \"Caching\",\n    percentage: 11.1,\n    value: \"$31.9\",\n    color: \"bg-gray-400 dark:bg-gray-600\",\n  },\n]\n\nconst overviewsDates = overviews.map((item) => toDate(item.date).getTime())\nconst maxDate = toDate(Math.max(...overviewsDates))\n\nexport default function Overview() {\n  const [selectedDates, setSelectedDates] = React.useState<\n    DateRange | undefined\n  >({\n    from: subDays(maxDate, 30),\n    to: maxDate,\n  })\n\n  return (\n    <>\n      <section aria-labelledby=\"current-billing-cycle\">\n        <h1\n          id=\"current-billing-cycle\"\n          className=\"scroll-mt-10 text-lg font-semibold text-gray-900 sm:text-xl dark:text-gray-50\"\n        >\n          Current billing cycle\n        </h1>\n        <div className=\"mt-4 grid grid-cols-1 gap-14 sm:mt-8 sm:grid-cols-2 lg:mt-10 xl:grid-cols-3\">\n          <ProgressBarCard\n            title=\"Usage\"\n            change=\"+0.2%\"\n            value=\"68.1%\"\n            valueDescription=\"of allowed capacity\"\n            ctaDescription=\"Monthly usage resets in 12 days.\"\n            ctaText=\"Manage plan.\"\n            ctaLink=\"#\"\n            data={data}\n          />\n          <ProgressBarCard\n            title=\"Workspace\"\n            change=\"+2.9%\"\n            value=\"21.7%\"\n            valueDescription=\"weekly active users\"\n            ctaDescription=\"Add up to 20 members in free plan.\"\n            ctaText=\"Invite users.\"\n            ctaLink=\"#\"\n            data={data2}\n          />\n          <CategoryBarCard\n            title=\"Costs\"\n            change=\"-1.4%\"\n            value=\"$293.5\"\n            valueDescription=\"current billing cycle\"\n            subtitle=\"Current costs\"\n            ctaDescription=\"Set hard caps in\"\n            ctaText=\"cost spend management.\"\n            ctaLink=\"#\"\n            data={data3}\n          />\n        </div>\n      </section>\n      <section aria-labelledby=\"usage-overview\">\n        <h1\n          id=\"usage-overview\"\n          className=\"mt-16 scroll-mt-8 text-lg font-semibold text-gray-900 sm:text-xl dark:text-gray-50\"\n        >\n          Overview\n        </h1>\n        <div className=\"sticky top-16 z-20 flex items-center justify-between border-b border-gray-200 bg-white pb-4 pt-4 sm:pt-6 lg:top-0 lg:mx-0 lg:px-0 lg:pt-8 dark:border-gray-800 dark:bg-gray-950\">\n          <Filterbar\n            maxDate={maxDate}\n            minDate={new Date(2024, 0, 1)}\n            selectedDates={selectedDates}\n            onDatesChange={(dates) => setSelectedDates(dates)}\n          />\n        </div>\n        <dl\n          className={cx(\n            \"mt-10 grid grid-cols-1 gap-14 sm:grid-cols-1 md:grid-cols-2 xl:grid-cols-3\",\n          )}\n        >\n          {categories.map((category) => {\n            return (\n              <ChartCard\n                key={category.title}\n                title={category.title}\n                type={category.type}\n                selectedDates={selectedDates}\n                selectedPeriod={\"last-year\"}\n              />\n            )\n          })}\n        </dl>\n      </section>\n    </>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/(main)/overview/page.tsx"
    }
  ]
}